CREATE TABLE CUSTOMER (
CUSTOMER_ID INT NOT NULL, 
NAME CHAR(20), 
LAST_NAME CHAR(30), 
PHONE INT, 
ADDRESS CHAR(30),
IDENTIFICATION INT, 
PRIMARY KEY (CUSTOMER_ID));

CREATE TABLE ADDRESS_TYPE
(TYPE_ID CHAR(5) NOT NULL, 
DESCRIPTION_ID CHAR (20),
PRIMARY KEY(TYPE_ID));

CREATE TABLE ZIPCODE
(ZIPCODE_ID INT NOT NULL,
CITY CHAR (15),
COUNTRY CHAR (25) NOT NULL,
PRIMARY KEY(ZIPCODE_ID, COUNTRY));

CREATE TABLE ADDRESS
(ADDRESS_ID INT NOT NULL,
TYPE_ID CHAR(5), 
NAME CHAR(20),
NUMBER INT,
ZIPCODE_ID INT,
COUNTRY CHAR (25),
FOREIGN KEY (TYPE_ID) REFERENCES ADDRESS_TYPE (TYPE_ID),
FOREIGN KEY (ZIPCODE_ID, COUNTRY) REFERENCES ZIPCODE (ZIPCODE_ID, COUNTRY),
PRIMARY KEY (ADDRESS_ID));

CREATE TABLE LOCATION_TYPE
(TYPE_ID CHAR(5) NOT NULL,
DESCRIPTION_ID CHAR(20),
ZIPCODE_ID INT,
COUNTRY CHAR(25),
FOREIGN KEY (ZIPCODE_ID, COUNTRY) REFERENCES ZIPCODE (ZIPCODE_ID, COUNTRY),
 PRIMARY KEY (TYPE_ID));

CREATE TABLE LOCATION 
(LOCATION_ID INT NOT NULL, 
TYPE_ID CHAR(5),
ADDRESS_ID INT,
FOREIGN KEY (TYPE_ID) REFERENCES LOCATION_TYPE (TYPE_ID), 
FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS (ADDRESS_ID),
PRIMARY KEY (LOCATION_ID));

CREATE TABLE PHONES
(NUM_SEQ INT NOT NULL,
CONTACT_NUMBER INT,
DESCRIPTION CHAR(15), 
LOCATION_ID INT, 
FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID),
PRIMARY KEY (NUM_SEQ));

CREATE TABLE STORE 
(STORE_ID INT NOT NULL, 
LOCATION_ID INT, 
FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID),
PRIMARY KEY (STORE_ID));

CREATE TABLE SALESMAN (
SALESMAN_ID INT NOT NULL,
NAME CHAR(20), 
LAST_NAME CHAR(20), 
STORE_ID INT, 
FOREIGN KEY (STORE_ID) REFERENCES STORE (STORE_ID),
PRIMARY KEY (SALESMAN_ID)
); 

CREATE TABLE SALE(
ORDER_ID INT NOT NULL, 
CUSTOMER_ID INT, 
SALESMAN_ID INT, 
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID), 
FOREIGN KEY (SALESMAN_ID) REFERENCES SALESMAN (SALESMAN_ID), 
PRIMARY KEY (ORDER_ID));

CREATE TABLE CARD
(CARD_ID CHAR(5) NOT NULL PRIMARY KEY,
CARD_TYPE CHAR(20));

CREATE TABLE METHOD
(PAYMENT_METHOD INT NOT NULL PRIMARY KEY,
DESCRIPTION CHAR(15));

CREATE TABLE CURRENCY
(CURRENCY_ID CHAR(5) NOT NULL PRIMARY KEY, 
DESCRIPTION CHAR (20));

CREATE TABLE CARD_OR_OTHER
(PAYMENT_TYPE INT NOT NULL PRIMARY KEY,
DESCRIPTION CHAR(20));

CREATE TABLE STATUS
(PAYMENT_STATE INT NOT NULL PRIMARY KEY,
DESCRIPTION CHAR(20));

CREATE TABLE BANK
(BANK_ID INT NOT NULL PRIMARY KEY, 
NAME CHAR(30), 
ADDRESS CHAR(30), 
COUNTRY CHAR(30));

CREATE TABLE CASH
(PAYMENT_TYPE INT REFERENCES CARD_OR_OTHER(PAYMENT_TYPE),
CURRENCY_ID CHAR(5), 
DESCRIPTION CHAR(20),
FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(CURRENCY_ID));


CREATE TABLE DEBT_CARD
(DEBT_CARD_NUMBER BIGINT, 
NAME CHAR(20),
LAST_NAME CHAR(20),
DEBIT_CARD_EXPIRY INT, 
DEBT_CARD_ID CHAR(5),
PAYMENT_TYPE INT, 
PAYMENT_METHOD INT, 
BANK_ID INT, 
FOREIGN KEY (DEBT_CARD_ID) REFERENCES CARD(CARD_ID),
FOREIGN KEY (PAYMENT_TYPE) REFERENCES CARD_OR_OTHER(PAYMENT_TYPE),
FOREIGN KEY (PAYMENT_METHOD) REFERENCES METHOD(PAYMENT_METHOD),
FOREIGN KEY (BANK_ID) REFERENCES BANK(BANK_ID));

CREATE TABLE CREDIT_CARD
(CREDIT_CARD_NUMBER BIGINT, 
NAME CHAR(20),
LAST_NAME CHAR(20),
CREDIT_CARD_EXPIRY INT, 
CREDIT_CARD_ID CHAR(5), 
PAYMENT_TYPE INT, 
PAYMENT_METHOD INT, 
BANK_ID INT, 
FOREIGN KEY (CREDIT_CARD_ID) REFERENCES CARD(CARD_ID),
FOREIGN KEY (PAYMENT_TYPE) REFERENCES CARD_OR_OTHER(PAYMENT_TYPE),
FOREIGN KEY (PAYMENT_METHOD) REFERENCES METHOD(PAYMENT_METHOD),
FOREIGN KEY (BANK_ID) REFERENCES BANK(BANK_ID));

CREATE TABLE TRANSFERS
(PAYMENT_TYPE INT, 
BANK_ID INT, 
FOREIGN KEY (PAYMENT_TYPE) REFERENCES CARD_OR_OTHER(PAYMENT_TYPE),
FOREIGN KEY (BANK_ID) REFERENCES BANK(BANK_ID));

CREATE TABLE PAYMENTS
(PAYMENT_ID INT NOT NULL PRIMARY KEY,
PAYMENT_TYPE INT, 
PAYMENT_AMOUNT INT,
PAYMENT_DATE TIMESTAMP,
PAYMENT_STATE INT, 
BANK_ID INT, 
CURRENCY_ID CHAR(5), 
FOREIGN KEY (PAYMENT_TYPE) REFERENCES CARD_OR_OTHER(PAYMENT_TYPE), FOREIGN KEY (BANK_ID) REFERENCES BANK(BANK_ID),
FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(CURRENCY_ID),
FOREIGN KEY (PAYMENT_STATE) REFERENCES STATUS(PAYMENT_STATE));

CREATE TABLE TICKET(
TICKET_ID INT NOT NULL PRIMARY KEY,
TIME_S TIMESTAMP,
STORE_ID INT ,
CASHIER INT,
TOTAL_ORDER INT,
TAX_TOTAL INT,
PRODUCT_TOTAL INT,
CURRENCY_ID CHAR(5),
ORDER_ID INT,
PAYMENT_ID INT,
CUSTOMER_ID INT,
SALESMAN_ID INT,
FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS (PAYMENT_ID),
FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY (CURRENCY_ID),
FOREIGN KEY (ORDER_ID) REFERENCES SALE (ORDER_ID),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
FOREIGN KEY (SALESMAN_ID) REFERENCES SALESMAN (SALESMAN_ID)
);

CREATE TABLE TICKET_ITEM (
TICKET_ID INT,
SEQNUM INT NOT NULL PRIMARY KEY,
PRODUCT_ID INT, DETAILS VARCHAR(70),
TOTAL_QUANTITY INT,
PRICE INT, 
TOTAL_PROD_PRICE INT,
TAX_TOTAL INT,
PAYMENT_ID INT, 
CURRENCY CHAR (5),
FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENTS (PAYMENT_ID),
FOREIGN KEY (CURRENCY) REFERENCES CURRENCY(CURRENCY_ID),
FOREIGN KEY (TICKET_ID) REFERENCES TICKET(TICKET_ID)
);

CREATE TABLE COLOUR
(COLOUR_ID INT NOT NULL PRIMARY KEY,
RGB_RED INT,
RGB_GREEN INT,
RGB_BLUE INT,
COLOUR_NAME CHAR(15));

CREATE TABLE MEASURE
(METRIC_CODE CHAR(5) NOT NULL PRIMARY KEY,
METRIC_NAME CHAR(15));

CREATE TABLE CAMERA
(CAMERA_ID INT NOT NULL PRIMARY KEY,
DESCRIPTION CHAR(20));

CREATE TABLE SIM 
(SIM_ID INT NOT NULL PRIMARY KEY,
DESCRIPTION CHAR(10));

CREATE TABLE PROCESSOR
(PROCESSOR_ID INT NOT NULL PRIMARY KEY,
BRAND CHAR(15),
DESCRIPTION CHAR(25));

CREATE TABLE RAM
(RAM_ID INT NOT NULL PRIMARY KEY,
VALUE INT,
METRIC_CODE CHAR(5),
FOREIGN KEY (METRIC_CODE) REFERENCES MEASURE(METRIC_CODE));

CREATE TABLE STORAGE
(STORAGE_ID INT NOT NULL PRIMARY KEY,
VALUE INT,
METRIC_CODE CHAR(5),
FOREIGN KEY (METRIC_CODE) REFERENCES MEASURE(METRIC_CODE)
);

CREATE TABLE SUPPLIER_ADDRESS
(ADDRESS_ID INT NOT NULL PRIMARY KEY,
ADDRESS_1 CHAR(30),
NUMBER INT,
COUNTRY CHAR(20));

CREATE TABLE CONTACTS
(CONTACT_ID INT NOT NULL PRIMARY KEY,
ADDRESS_ID INT,
PHONE INT,
EMAIL CHAR(20),
COUNTRY CHAR(30),
FOREIGN KEY(ADDRESS_ID) REFERENCES SUPPLIER_ADDRESS(ADDRESS_ID)
);


CREATE TABLE SUPPLIERS
(SUPPLIER_ID INT NOT NULL PRIMARY KEY,
SUPPLIER_NAME CHAR(30),
CONTACT_ID INT,
FOREIGN KEY (CONTACT_ID) REFERENCES CONTACTS(CONTACT_ID));

CREATE TABLE BRANDS
(BRAND_ID INT NOT NULL PRIMARY KEY,
BRAND_NAME CHAR(20),
COUNTRY CHAR(30));

CREATE TABLE SEGMENT
(SEGMENT_ID INT NOT NULL PRIMARY KEY,
NAME CHAR(40));

CREATE TABLE FAMILY
(FAMILY_ID INT NOT NULL PRIMARY KEY,
NAME CHAR(40),
SEGMENT_ID INT,
FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT(SEGMENT_ID));

CREATE TABLE CLASS 
(CLASS_ID INT NOT NULL PRIMARY KEY,
NAME CHAR(40),
FAMILY_ID INT REFERENCES FAMILY(FAMILY_ID),
FOREIGN KEY (FAMILY_ID)REFERENCES FAMILY(FAMILY_ID));

CREATE TABLE BRICK
(BRICK_ID INT NOT NULL PRIMARY KEY,
NAME CHAR(40),
CLASS_ID INT,
FOREIGN KEY (CLASS_ID)REFERENCES CLASS(CLASS_ID));

CREATE TABLE PRODUCT
(PRODUCT_ID INT NOT NULL PRIMARY KEY,
BRICK_ID INT,
BRAND_ID INT,
SUPPLIER_ID INT,
DESCRIPTION CHAR(20),
SIZE_METRIC CHAR(5),
SIZE_VALUE INT,
WEIGHT_METRIC CHAR(5),
WEIGHT_VALUE INT,
COLOUR_ID INT,
PROCESSOR_ID INT,
RAM_ID INT,
STORAGE_ID INT,
SIM_ID INT,
CAMERA_ID INT,
FOREIGN KEY(BRAND_ID)REFERENCES BRANDS(BRAND_ID),
FOREIGN KEY(SUPPLIER_ID)REFERENCES SUPPLIERS(SUPPLIER_ID),
FOREIGN KEY (SIZE_METRIC) REFERENCES MEASURE(METRIC_CODE),
FOREIGN KEY(WEIGHT_METRIC) REFERENCES MEASURE(METRIC_CODE),
FOREIGN KEY(COLOUR_ID) REFERENCES COLOUR(COLOUR_ID),
FOREIGN KEY(PROCESSOR_ID)REFERENCES PROCESSOR(PROCESSOR_ID),
FOREIGN KEY (RAM_ID) REFERENCES RAM(RAM_ID),
FOREIGN KEY (STORAGE_ID) REFERENCES STORAGE(STORAGE_ID),
FOREIGN KEY (SIM_ID)REFERENCES SIM(SIM_ID),
FOREIGN KEY ( CAMERA_ID) REFERENCES CAMERA(CAMERA_ID),
FOREIGN KEY (BRICK_ID) REFERENCES BRICK(BRICK_ID));

CREATE TABLE PRICE
(PRODUCT_ID INT NOT NULL PRIMARY KEY,
COST_CURRENCY CHAR(5) ,
COST DECIMAL(10,2),
PRICE_CURRENCY CHAR(5),
PRICE DECIMAL(10,2),
PRICE_PROMOTION DECIMAL(10,2),
TAXES DECIMAL(10,2),
FOREIGN KEY (COST_CURRENCY) REFERENCES CURRENCY(CURRENCY_ID),
FOREIGN KEY (PRICE_CURRENCY) REFERENCES CURRENCY(CURRENCY_ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID));

